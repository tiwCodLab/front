{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intermship\\\\Project1\\\\resevetable\\\\src\\\\pages\\\\Admin\\\\AdminTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./../Table.css\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function updateTable(id, updateTable) {\n  try {\n    let response = await fetch(`/table/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updateTable),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw Error({\n          error: `Could not update parcel ${id}`\n        });\n      }\n      return res.json();\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\nexport async function updateAction(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const formData = await request.formData();\n  let table = Object.fromEntries(formData);\n  if (!table) {\n    throw new Error(\"Error in updating table \" + params.id);\n  }\n  const {\n    id\n  } = params;\n  const updatedTable = {\n    id,\n    ...table\n  };\n  await updateTable(id, updatedTable);\n}\nfunction Status(props) {\n  if (props) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: \"Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"danger\",\n      children: \"Booked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = Status;\nfunction AdminTable() {\n  _s();\n  const myrerve = useLoaderData();\n  const handleManageClick = async index => {\n    // Update the availability status to true for the clicked table\n    const tableToUpdate = myrerve[index];\n    tableToUpdate.tableInfo.available = true;\n    await updateTable(tableToUpdate.tableInfo.id, tableToUpdate.tableInfo);\n  };\n  const MyreserveRows = myrerve.map((e, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.tableInfo.table_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.tableInfo.zone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.customerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.reservationDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.reservationTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(Status, {\n        props: e.tableInfo.available\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.tableInfo.available ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleManageClick(index),\n        children: \"Manage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"reserve-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: myrerve.length ? MyreserveRows : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"7\",\n            className: \"nothavebooking\",\n            children: \"Not have Booking List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminTable, \"BQCnnB9CYHkn2+/xVYLDhDsmXqw=\", false, function () {\n  return [useLoaderData];\n});\n_c2 = AdminTable;\nexport default AdminTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"Status\");\n$RefreshReg$(_c2, \"AdminTable\");","map":{"version":3,"names":["React","useLoaderData","jsxDEV","_jsxDEV","updateTable","id","response","fetch","method","body","JSON","stringify","headers","Headers","then","res","ok","Error","error","json","console","updateAction","_ref","request","params","formData","table","Object","fromEntries","updatedTable","Status","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminTable","_s","myrerve","handleManageClick","index","tableToUpdate","tableInfo","available","MyreserveRows","map","e","table_number","zone","customerName","reservationDate","reservationTime","onClick","length","colSpan","_c2","$RefreshReg$"],"sources":["D:/Intermship/Project1/resevetable/src/pages/Admin/AdminTable.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./../Table.css\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nasync function updateTable(id, updateTable) {\r\n  try {\r\n    let response = await fetch(`/table/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(updateTable),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        throw Error({ error: `Could not update parcel ${id}` });\r\n      }\r\n      return res.json();\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n  }\r\n}\r\n\r\nexport async function updateAction({ request, params }) {\r\n  const formData = await request.formData();\r\n  let table = Object.fromEntries(formData);\r\n  if (!table) {\r\n    throw new Error(\"Error in updating table \" + params.id);\r\n  }\r\n  const { id } = params;\r\n  const updatedTable = { id, ...table };\r\n  await updateTable(id, updatedTable);\r\n}\r\n\r\nfunction Status(props) {\r\n  if (props) {\r\n    return <div className=\"info\">Available</div>;\r\n  } else {\r\n    return <div className=\"danger\">Booked</div>;\r\n  }\r\n}\r\n\r\nfunction AdminTable() {\r\n  const myrerve = useLoaderData();\r\n\r\n  const handleManageClick = async (index) => {\r\n    // Update the availability status to true for the clicked table\r\n    const tableToUpdate = myrerve[index];\r\n    tableToUpdate.tableInfo.available = true;\r\n    await updateTable(tableToUpdate.tableInfo.id, tableToUpdate.tableInfo);\r\n  };\r\n\r\n  const MyreserveRows = myrerve.map((e, index) => (\r\n    <tr key={index}>\r\n      <td>{e.tableInfo.table_number}</td>\r\n      <td>{e.tableInfo.zone}</td>\r\n      <td>{e.customerName}</td>\r\n      <td>{e.reservationDate}</td>\r\n      <td>{e.reservationTime}</td>\r\n      <td>{<Status props={e.tableInfo.available} />}</td>\r\n      <td>\r\n        {e.tableInfo.available ? (\r\n          <button onClick={() => handleManageClick(index)}>Manage</button>\r\n        ) : null}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"tab-container\">\r\n      <table className=\"reserve-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Table No.</th>\r\n            <th>Zone</th>\r\n            <th>Name</th>\r\n            <th>Date Booking</th>\r\n            <th>Time Booking</th>\r\n            <th>Status</th>\r\n            <th>Manage</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myrerve.length ? (\r\n            MyreserveRows\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"7\" className=\"nothavebooking\">\r\n                Not have Booking List\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}