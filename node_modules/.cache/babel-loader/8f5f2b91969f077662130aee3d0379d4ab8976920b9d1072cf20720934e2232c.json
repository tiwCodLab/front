{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intermship\\\\Project1\\\\resevetable\\\\src\\\\pages\\\\Admin\\\\AdminTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./../Table.css\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction status(props) {\n  if (props === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: \"Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"danger\",\n      children: \"Booked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n}\nasync function updateTable(id, updateParcel) {\n  try {\n    let response = await fetch(`/api/parcel/${id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updateParcel),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw Error({\n          error: `Could not update parcel ${id}`\n        });\n      }\n      return res.json();\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\nfunction AdminTable() {\n  _s();\n  const myrerve = useLoaderData();\n  const MyreserveRows = myrerve.map((e, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.tableInfo.table_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.tableInfo.zone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.customerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.reservationDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.reservationTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: status(e.tableInfo.available)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n\n  // Function to handle searching/filtering the table\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"reserve-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: myrerve.length ? MyreserveRows : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nothavebooking\",\n          children: \"Not have Booking List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminTable, \"BQCnnB9CYHkn2+/xVYLDhDsmXqw=\", false, function () {\n  return [useLoaderData];\n});\n_c = AdminTable;\nexport default AdminTable;\nvar _c;\n$RefreshReg$(_c, \"AdminTable\");","map":{"version":3,"names":["React","useLoaderData","jsxDEV","_jsxDEV","status","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","updateTable","id","updateParcel","response","fetch","method","body","JSON","stringify","headers","Headers","then","res","ok","Error","error","json","console","AdminTable","_s","myrerve","MyreserveRows","map","e","index","tableInfo","table_number","zone","customerName","reservationDate","reservationTime","available","length","_c","$RefreshReg$"],"sources":["D:/Intermship/Project1/resevetable/src/pages/Admin/AdminTable.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./../Table.css\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction status(props) {\r\n  if (props === true) {\r\n    return <div className=\"info\">Available</div>;\r\n  } else {\r\n    return <div className=\"danger\">Booked</div>;\r\n  }\r\n}\r\nasync function updateTable(id, updateParcel) {\r\n  try {\r\n    let response = await fetch(`/api/parcel/${id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(updateParcel),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        throw Error({ error: `Could not update parcel ${id}` });\r\n      }\r\n      return res.json();\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n  }\r\n}\r\n\r\nfunction AdminTable() {\r\n  const myrerve = useLoaderData();\r\n\r\n  const MyreserveRows = myrerve.map((e, index) => (\r\n    <tr key={index}>\r\n      <td>{e.tableInfo.table_number}</td>\r\n      <td>{e.tableInfo.zone}</td>\r\n      <td>{e.customerName}</td>\r\n      <td>{e.reservationDate}</td>\r\n      <td>{e.reservationTime}</td>\r\n      <td>{status(e.tableInfo.available)}</td>\r\n    </tr>\r\n  ));\r\n\r\n  // Function to handle searching/filtering the table\r\n\r\n  return (\r\n    <div className=\"tab-container\">\r\n      <table className=\"reserve-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Table No.</th>\r\n            <th>Zone</th>\r\n            <th>Name</th>\r\n            <th>Date Booking</th>\r\n            <th>Time Booking</th>\r\n            <th>Status</th>\r\n            <th>Manage</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myrerve.length ? (\r\n            MyreserveRows\r\n          ) : (\r\n            <div className=\"nothavebooking\">Not have Booking List</div>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}