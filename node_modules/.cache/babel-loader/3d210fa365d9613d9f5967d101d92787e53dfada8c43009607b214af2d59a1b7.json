{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intermship\\\\Project1\\\\resevetable\\\\src\\\\pages\\\\Admin\\\\AdminTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./../Table.css\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction status(props) {\n  if (props === true) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infos\",\n      children: \"Available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dangers\",\n      children: \"Booked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n}\nfunction AdminTable() {\n  _s();\n  const initialData = useLoaderData();\n  const [myrerve, setMyrerve] = useState(initialData);\n  const updateTableAvailability = index => {\n    // Make a copy of the existing data\n    const updatedData = [...myrerve];\n    // Update the availability of the table\n    updatedData[index].available = true;\n    // Update the state with the modified data\n    setMyrerve(updatedData);\n  };\n  const MyreserveRows = myrerve.map((e, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.table_number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.zone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: status(e.available)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: e.available ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"manage-button\",\n          onClick: () => updateTableAvailability(index),\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this));\n\n  // Function to handle searching/filtering the table\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"admin-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Table No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Zone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: myrerve.length ? MyreserveRows : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nothavebooking\",\n          children: \"Not have Booking List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminTable, \"VM+4Gep1MvnvWQVlCqv1jmKDXX0=\", false, function () {\n  return [useLoaderData];\n});\n_c = AdminTable;\nexport default AdminTable;\nvar _c;\n$RefreshReg$(_c, \"AdminTable\");","map":{"version":3,"names":["React","useState","useLoaderData","jsxDEV","_jsxDEV","status","props","className","children","fileName","_jsxFileName","lineNumber","columnNumber","AdminTable","_s","initialData","myrerve","setMyrerve","updateTableAvailability","index","updatedData","available","MyreserveRows","map","e","table_number","zone","onClick","length","_c","$RefreshReg$"],"sources":["D:/Intermship/Project1/resevetable/src/pages/Admin/AdminTable.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./../Table.css\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction status(props) {\r\n  if (props === true) {\r\n    return <div className=\"infos\">Available</div>;\r\n  } else {\r\n    return <div className=\"dangers\">Booked</div>;\r\n  }\r\n}\r\n\r\nfunction AdminTable() {\r\n  const initialData = useLoaderData();\r\n  const [myrerve, setMyrerve] = useState(initialData);\r\n\r\n  const updateTableAvailability = (index) => {\r\n    // Make a copy of the existing data\r\n    const updatedData = [...myrerve];\r\n    // Update the availability of the table\r\n    updatedData[index].available = true;\r\n    // Update the state with the modified data\r\n    setMyrerve(updatedData);\r\n  };\r\n\r\n  const MyreserveRows = myrerve.map((e, index) => (\r\n    <tr key={index}>\r\n      <td>{e.table_number}</td>\r\n      <td>{e.zone}</td>\r\n      <td>{status(e.available)}</td>\r\n      <td>\r\n        {e.available ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"manage-container\">\r\n            <button\r\n              className=\"manage-button\"\r\n              onClick={() => updateTableAvailability(index)}\r\n            >\r\n              Available\r\n            </button>\r\n          </div>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  // Function to handle searching/filtering the table\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <table className=\"admin-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Table No.</th>\r\n            <th>Zone</th>\r\n            <th>Status</th>\r\n            <th>Manage</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {myrerve.length ? (\r\n            MyreserveRows\r\n          ) : (\r\n            <div className=\"nothavebooking\">Not have Booking List</div>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}