{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intermship\\\\Project1\\\\resevetable\\\\src\\\\pages\\\\TableDetailReserve.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport async function getTable(id) {\n  const res = await fetch(`/table/${id}`);\n  let table = await res.json();\n  if (!res.ok) {\n    throw Error(table.error);\n  }\n  return table; //res.json()\n}\n\nexport const tableDetailLoader = async _ref => {\n  let {\n    params\n  } = _ref;\n  const {\n    id\n  } = params;\n  try {\n    const res = await getTable(id);\n    return res;\n  } catch (error) {\n    throw new Error(\"Table with id: \" + id + \" could not be found.\");\n  }\n};\nconst TableDetailReseve = () => {\n  _s();\n  const tableID = useLoaderData();\n  if (!tableID) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tableID.table_id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tableID.table_number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tableID.capacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tableID.zone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(TableDetailReseve, \"dznIuNXz3JvR9WjxvIsSODLU2sA=\", false, function () {\n  return [useLoaderData];\n});\n_c = TableDetailReseve;\nexport default TableDetailReseve;\nvar _c;\n$RefreshReg$(_c, \"TableDetailReseve\");","map":{"version":3,"names":["useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","getTable","id","res","fetch","table","json","ok","Error","error","tableDetailLoader","_ref","params","TableDetailReseve","_s","tableID","children","fileName","_jsxFileName","lineNumber","columnNumber","table_id","table_number","capacity","zone","_c","$RefreshReg$"],"sources":["D:/Intermship/Project1/resevetable/src/pages/TableDetailReserve.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\r\n\r\nexport async function getTable(id) {\r\n  const res = await fetch(`/table/${id}`);\r\n\r\n  let table = await res.json();\r\n  if (!res.ok) {\r\n    throw Error(table.error);\r\n  }\r\n  return table; //res.json()\r\n}\r\n\r\nexport const tableDetailLoader = async ({ params }) => {\r\n  const { id } = params;\r\n  try {\r\n    const res = await getTable(id);\r\n    return res;\r\n  } catch (error) {\r\n    throw new Error(\"Table with id: \" + id + \" could not be found.\");\r\n  }\r\n};\r\n\r\nconst TableDetailReseve = () => {\r\n  const tableID = useLoaderData();\r\n\r\n  if (!tableID) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>{tableID.table_id}</h2>\r\n        <p>{tableID.table_number}</p>\r\n        <p>{tableID.capacity}</p>\r\n        <p>{tableID.zone}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableDetailReseve;\r\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,OAAO,eAAeC,QAAQA,CAACC,EAAE,EAAE;EACjC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,UAASF,EAAG,EAAC,CAAC;EAEvC,IAAIG,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;EAC5B,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;IACX,MAAMC,KAAK,CAACH,KAAK,CAACI,KAAK,CAAC;EAC1B;EACA,OAAOJ,KAAK,CAAC,CAAC;AAChB;;AAEA,OAAO,MAAMK,iBAAiB,GAAG,MAAAC,IAAA,IAAsB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EAChD,MAAM;IAAET;EAAG,CAAC,GAAGU,MAAM;EACrB,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMF,QAAQ,CAACC,EAAE,CAAC;IAC9B,OAAOC,GAAG;EACZ,CAAC,CAAC,OAAOM,KAAK,EAAE;IACd,MAAM,IAAID,KAAK,CAAC,iBAAiB,GAAGN,EAAE,GAAG,sBAAsB,CAAC;EAClE;AACF,CAAC;AAED,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,OAAO,GAAGnB,aAAa,CAAC,CAAC;EAE/B,IAAI,CAACmB,OAAO,EAAE;IACZ,oBAAOjB,OAAA;MAAAkB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACEtB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAKD,OAAO,CAACM;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC3BtB,OAAA;QAAAkB,QAAA,EAAID,OAAO,CAACO;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtB,OAAA;QAAAkB,QAAA,EAAID,OAAO,CAACQ;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtB,OAAA;QAAAkB,QAAA,EAAID,OAAO,CAACS;MAAI;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC,gBACN,CAAC;AAEP,CAAC;AAACN,EAAA,CAjBID,iBAAiB;EAAA,QACLjB,aAAa;AAAA;AAAA6B,EAAA,GADzBZ,iBAAiB;AAmBvB,eAAeA,iBAAiB;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}