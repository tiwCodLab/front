{"ast":null,"code":"var _jsxFileName = \"D:\\\\Intermship\\\\Project1\\\\resevetable\\\\src\\\\pages\\\\CRUD\\\\EditPage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Form, redirect, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function updateTable(table_id, updatedTable) {\n  try {\n    let response = await fetch(`/table/${table_id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(updatedTable),\n      headers: new Headers({\n        \"Content-Type\": \"application/json\"\n      })\n    }).then(res => {\n      if (!res.ok) {\n        throw Error(`Could not update Table ${table_id}`);\n      }\n      return res.json();\n    });\n    return response;\n  } catch (error) {\n    console.error(\"Error:\", error);\n  }\n}\nexport async function updateAction(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const formData = await request.formData();\n  let book = Object.fromEntries(formData);\n  if (!book) {\n    throw new Error(\"Error in updating Book \" + params.id);\n  }\n  const {\n    table_id\n  } = params;\n  const updatedBook = {\n    table_id,\n    ...book\n  };\n  await updateTable(table_id, updatedBook);\n  console.log(updateTable(table_id, updatedBook));\n  return redirect(`/admin/`);\n}\nexport default function EditTable() {\n  _s();\n  const {\n    table_id\n  } = useParams();\n  const navigate = useNavigate();\n  console.log(table_id);\n\n  // Load initial product data from API\n  const [table, setTeble] = useState();\n  useEffect(() => {\n    async function fetchTable() {\n      const response = await fetch(`/table/${table_id}`);\n      const data = await response.json();\n      setTeble(data);\n    }\n    fetchTable();\n  }, [table_id]);\n  // Render loading state while waiting for product data to load\n  if (!table) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    replace: true,\n    method: \"put\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Table ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: table.table_id,\n        name: \"table_id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Table number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: table.table_number,\n        name: \"table_number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Capacity\", /*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: table.capacity,\n        name: \"capacity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Status\", /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"available\",\n        defaultValue: table.available,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"true\",\n          children: \"Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"false\",\n          children: \"Booked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Zone\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: table.zone,\n        name: \"zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bt-submit\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt-s\",\n        type: \"submit\",\n        children: \"\\u0E1A\\u0E31\\u0E19\\u0E17\\u0E36\\u0E01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bt-cancel\",\n        type: \"button\",\n        onClick: () => {\n          navigate(-1);\n        },\n        children: \"\\u0E22\\u0E01\\u0E40\\u0E25\\u0E34\\u0E01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(EditTable, \"a3lmYmwk9RxBrM8vzu/4g/1Xwaw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditTable;\nvar _c;\n$RefreshReg$(_c, \"EditTable\");","map":{"version":3,"names":["useEffect","useState","Form","redirect","useNavigate","useParams","jsxDEV","_jsxDEV","updateTable","table_id","updatedTable","response","fetch","method","body","JSON","stringify","headers","Headers","then","res","ok","Error","json","error","console","updateAction","_ref","request","params","formData","book","Object","fromEntries","id","updatedBook","log","EditTable","_s","navigate","table","setTeble","fetchTable","data","children","fileName","_jsxFileName","lineNumber","columnNumber","replace","type","defaultValue","name","table_number","capacity","available","value","zone","className","onClick","_c","$RefreshReg$"],"sources":["D:/Intermship/Project1/resevetable/src/pages/CRUD/EditPage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Form, redirect, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nasync function updateTable(table_id, updatedTable) {\r\n  try {\r\n    let response = await fetch(`/table/${table_id}`, {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(updatedTable),\r\n      headers: new Headers({\r\n        \"Content-Type\": \"application/json\",\r\n      }),\r\n    }).then((res) => {\r\n      if (!res.ok) {\r\n        throw Error(`Could not update Table ${table_id}`);\r\n      }\r\n      return res.json();\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n  }\r\n}\r\n\r\nexport async function updateAction({ request, params }) {\r\n  const formData = await request.formData();\r\n  let book = Object.fromEntries(formData);\r\n  if (!book) {\r\n    throw new Error(\"Error in updating Book \" + params.id);\r\n  }\r\n  const { table_id } = params;\r\n  const updatedBook = { table_id, ...book };\r\n  await updateTable(table_id, updatedBook);\r\n  console.log(updateTable(table_id, updatedBook));\r\n  return redirect(`/admin/`);\r\n}\r\n\r\nexport default function EditTable() {\r\n  const { table_id } = useParams();\r\n  const navigate = useNavigate();\r\n  console.log(table_id);\r\n\r\n  // Load initial product data from API\r\n  const [table, setTeble] = useState();\r\n  useEffect(() => {\r\n    async function fetchTable() {\r\n      const response = await fetch(`/table/${table_id}`);\r\n      const data = await response.json();\r\n      setTeble(data);\r\n    }\r\n    fetchTable();\r\n  }, [table_id]);\r\n  // Render loading state while waiting for product data to load\r\n  if (!table) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <Form replace method=\"put\">\r\n      <label>\r\n        Table ID\r\n        <input type=\"text\" defaultValue={table.table_id} name=\"table_id\" />\r\n      </label>\r\n      <label>\r\n        Table number\r\n        <input\r\n          type=\"text\"\r\n          defaultValue={table.table_number}\r\n          name=\"table_number\"\r\n        ></input>\r\n      </label>\r\n      <label>\r\n        Capacity\r\n        <input defaultValue={table.capacity} name=\"capacity\"></input>\r\n      </label>\r\n\r\n      <label>\r\n        Status\r\n        <select name=\"available\" defaultValue={table.available}>\r\n          <option value=\"true\">Available</option>\r\n          <option value=\"false\">Booked</option>\r\n        </select>\r\n      </label>\r\n      <label>\r\n        Zone\r\n        <input type=\"text\" defaultValue={table.zone} name=\"zone\"></input>\r\n      </label>\r\n\r\n      <div className=\"bt-submit\">\r\n        <button className=\"bt-s\" type=\"submit\">\r\n          บันทึก\r\n        </button>\r\n        <button\r\n          className=\"bt-cancel\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            navigate(-1);\r\n          }}\r\n        >\r\n          ยกเลิก\r\n        </button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}